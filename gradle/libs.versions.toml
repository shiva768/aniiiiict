[versions]
# Plugins
agp = "7.4.2"
kotlin = "2.0.0"
kotlin-compose = "2.0.0"
ksp = "2.0.0-1.0.21"
hilt = "2.56"
apollo = "4.2.0"
secrets-gradle-plugin = "2.0.1"
detekt = "1.23.7"
ktlint = "12.1.1"

# AndroidX
core-ktx = "1.16.0"
lifecycle = "2.9.0"
activity-compose = "1.10.1"
browser = "1.8.0"
datastore-preferences = "1.1.6"
navigation-compose = "2.9.0"

# Compose
compose-bom = "2025.05.00"
compose-material3 = "1.3.2"
compose-material = "1.8.1"

# DI
hilt-navigation = "1.2.0"

# Network
retrofit = "2.11.0"
okhttp = "4.12.0"
gson = "2.11.0"

# Async
coroutines = "1.9.0"

# UI
coil = "2.5.0"

# Testing
junit = "4.13.2"
mockito-core = "5.10.0"
mockito-kotlin = "5.2.1"
espresso = "3.6.1"
arch-testing = "2.2.0"
robolectric = "4.10.3"
androidx-test-core = "1.6.1"
androidx-test-junit = "1.2.1"
turbine = "1.0.0"
kotest = "5.8.1"
mockk = "1.13.10"

[libraries]
# AndroidX
androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "core-ktx" }
androidx-datastore-preferences = { module = "androidx.datastore:datastore-preferences", version.ref = "datastore-preferences" }
androidx-lifecycle-runtime = { group = "androidx.lifecycle", name = "lifecycle-runtime-ktx", version.ref = "lifecycle" }
androidx-activity-compose = { group = "androidx.activity", name = "activity-compose", version.ref = "activity-compose" }
androidx-browser = { group = "androidx.browser", name = "browser", version.ref = "browser" }
navigation-compose = { group = "androidx.navigation", name = "navigation-compose", version.ref = "navigation-compose" }

# Compose
compose-bom = { group = "androidx.compose", name = "compose-bom", version.ref = "compose-bom" }
compose-ui = { group = "androidx.compose.ui", name = "ui" }
compose-ui-graphics = { group = "androidx.compose.ui", name = "ui-graphics" }
compose-ui-tooling-preview = { group = "androidx.compose.ui", name = "ui-tooling-preview" }
compose-ui-tooling = { group = "androidx.compose.ui", name = "ui-tooling" }
compose-ui-test-manifest = { group = "androidx.compose.ui", name = "ui-test-manifest" }
compose-material3 = { group = "androidx.compose.material3", name = "material3", version.ref = "compose-material3" }
compose-material-icons = { group = "androidx.compose.material", name = "material-icons-extended" }
compose-material = { group = "androidx.compose.material", name = "material", version.ref = "compose-material" }

# DI (Hilt)
hilt-android = { group = "com.google.dagger", name = "hilt-android", version.ref = "hilt" }
hilt-compiler = { group = "com.google.dagger", name = "hilt-android-compiler", version.ref = "hilt" }
hilt-navigation-compose = { group = "androidx.hilt", name = "hilt-navigation-compose", version.ref = "hilt-navigation" }
hilt-android-gradle-plugin = { group = "com.google.dagger", name = "hilt-android-gradle-plugin", version.ref = "hilt" }

# Network
retrofit = { group = "com.squareup.retrofit2", name = "retrofit", version.ref = "retrofit" }
retrofit-gson = { group = "com.squareup.retrofit2", name = "converter-gson", version.ref = "retrofit" }
gson = { group = "com.google.code.gson", name = "gson", version.ref = "gson" }
okhttp = { group = "com.squareup.okhttp3", name = "okhttp", version.ref = "okhttp" }
okhttp-logging = { group = "com.squareup.okhttp3", name = "logging-interceptor", version.ref = "okhttp" }
apollo-runtime = { group = "com.apollographql.apollo", name = "apollo-runtime", version.ref = "apollo" }
apollo-normalized-cache = { group = "com.apollographql.apollo", name = "apollo-normalized-cache", version.ref = "apollo" }
apollo-adapters = { group = "com.apollographql.apollo", name = "apollo-adapters", version.ref = "apollo" }

# Async
coroutines-android = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-android", version.ref = "coroutines" }
coroutines-test = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-test", version.ref = "coroutines" }

# UI
coil = { group = "io.coil-kt", name = "coil", version.ref = "coil" }
coil-compose = { group = "io.coil-kt", name = "coil-compose", version.ref = "coil" }

# Testing
junit = { group = "junit", name = "junit", version.ref = "junit" }
mockito-core = { group = "org.mockito", name = "mockito-core", version.ref = "mockito-core" }
mockito-kotlin = { group = "org.mockito.kotlin", name = "mockito-kotlin", version.ref = "mockito-kotlin" }
mockito-android = { group = "org.mockito", name = "mockito-android", version.ref = "mockito-core" }
androidx-arch-testing = { group = "androidx.arch.core", name = "core-testing", version.ref = "arch-testing" }
espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "espresso" }
compose-ui-test = { group = "androidx.compose.ui", name = "ui-test-junit4" }
turbine = { group = "app.cash.turbine", name = "turbine", version.ref = "turbine" }
kotest-runner-junit5 = { group = "io.kotest", name = "kotest-runner-junit5", version.ref = "kotest" }
kotest-assertions-core = { group = "io.kotest", name = "kotest-assertions-core", version.ref = "kotest" }
kotest-framework = { group = "io.kotest", name = "kotest-framework-datatest", version.ref = "kotest" }
mockk = { group = "io.mockk", name = "mockk", version.ref = "mockk" }
robolectric = { group = "org.robolectric", name = "robolectric", version.ref = "robolectric" }
androidx-test-core = { group = "androidx.test", name = "core", version.ref = "androidx-test-core" }
androidx-test-junit = { group = "androidx.test.ext", name = "junit", version.ref = "androidx-test-junit" }

# Static Analysis
detekt-formatting = { group = "io.gitlab.arturbosch.detekt", name = "detekt-formatting", version.ref = "detekt" }


[plugins]
android-application = { id = "com.android.application", version.ref = "agp" }
android-library = { id = "com.android.library", version.ref = "agp" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-plugin-compose = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin-compose" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
hilt = { id = "com.google.dagger.hilt.android", version.ref = "hilt" }
apollo = { id = "com.apollographql.apollo", version.ref = "apollo" }
secrets-gradle-plugin = { id = "com.google.android.libraries.mapsplatform.secrets-gradle-plugin", version.ref = "secrets-gradle-plugin" }
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }
ktlint = { id = "org.jlleitschuh.gradle.ktlint", version.ref = "ktlint" }

[bundles]
compose-ui = ["compose-ui", "compose-ui-graphics", "compose-ui-tooling-preview"]
compose-debug = ["compose-ui-tooling", "compose-ui-test-manifest"]
retrofit = ["retrofit", "retrofit-gson", "gson"]
okhttp = ["okhttp", "okhttp-logging"]
apollo = ["apollo-runtime", "apollo-normalized-cache", "apollo-adapters"]
testing = ["junit", "mockito-core", "mockito-kotlin", "androidx-arch-testing", "coroutines-test", "kotest-framework", "mockk"]
android-testing = ["androidx-test-junit", "espresso-core", "compose-ui-test", "mockito-android"]